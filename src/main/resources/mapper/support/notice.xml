<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.mgv.support.dao.NoticeDao">

	<insert id="insertNotice" parameterType="kr.co.mgv.support.vo.Notice">
		insert into MGV_SUPPORT_NOTICE
			(notice_title, notice_content, user_id, 
			location_no, theater_no, category_no, notice_type)
		values
			(#{title}, #{content}, #{user.id}, 
			#{location.no}, #{theater.no}, #{category.no}, #{type})
	</insert>
	
	<update id="updateNoticeByNo" parameterType="kr.co.mgv.support.vo.Notice">
		UPDATE 
			MGV_SUPPORT_NOTICE
		<set>
			<if test="title != null">
				notice_title = #{title},
			</if>
			<if test="content != null">
				NOTICE_CONTENT = #{content},
			</if>
			<if test="deleted != null">
				NOTICE_DELETED = #{deleted},
			</if>
			<if test="updateDate != null">
				NOTICE_UPDATE_DATE = #{updateDate},
			</if>
			<if test="location != null">
				location_no = #{location.no},
			</if>
			<if test="theater != null">
				theater_no = #{theater.no},
			</if>
			<if test="category != null">
				CATEGORY_NO = #{category.no},
			</if>
			<if test="type != null">
				notice_type = #{type}
			</if>
		</set> 
		WHERE 
			NOTICE_NO= #{no}
	</update>

	<select id="getTotalRows" parameterType="map" resultType="int">
		select count(*)
		FROM 
			MGV_SUPPORT_NOTICE A 
			left outer join MGV_LOCATION B on A.LOCATION_NO = B.LOCATION_NO 
			left outer join MGV_THEATERS C on A.THEATER_NO = C.THEATER_NO 
			inner join MGV_SUPPORT_CATEGORIES D on A.CATEGORY_NO = D.CATEGORY_NO
		where
			A.NOTICE_DELETED = 'N'
			<if test="catNo != 21">
				and A.CATEGORY_NO = #{catNo}
			</if>
			<if test="locationNo != null">
				and A.LOCATION_NO = #{locationNo}
			</if>
			<if test="theaterNo != null">
				and A.THEATER_NO = #{theaterNo}
			</if>
			<if test="keyword != null">
				and A.NOTICE_TITLE like  CONCAT('%', #{keyword}, '%')	
			</if>
	</select>
	
	<select id="getNotice" parameterType="map" resultType="kr.co.mgv.support.vo.Notice">
		SELECT 
			A.NOTICE_NO				as no, 
			A.NOTICE_TITLE			as title, 
			A.NOTICE_CONTENT		as content, 
			A.NOTICE_DELETED		as deleted,
			A.NOTICE_UPDATE_DATE	as updateDate,
			A.NOTICE_CREATE_DATE	as createDate, 
			A.LOCATION_NO			as "location.no", 
			B.LOCATION_NAME			as "location.name", 
			A.THEATER_NO			as "theater.no", 
			C.THEATER_NAME			as "theater.name", 
			A.CATEGORY_NO			as "category.no",
			D.CATEGORY_NAME			as "category.name",
			A.NOTICE_TYPE			as type 
		FROM 
			MGV_SUPPORT_NOTICE A 
			left outer join MGV_LOCATION B on A.LOCATION_NO = B.LOCATION_NO 
			left outer join MGV_THEATERS C on A.THEATER_NO = C.THEATER_NO 
			inner join MGV_SUPPORT_CATEGORIES D on A.CATEGORY_NO = D.CATEGORY_NO
		where
			A.NOTICE_DELETED = 'N'
			<if test="catNo != 21">
				and A.CATEGORY_NO = #{catNo}
			</if>
			<if test="locationNo != null">
				and A.LOCATION_NO = #{locationNo}
			</if>
			<if test="theaterNo != null">
				and A.THEATER_NO = #{theaterNo}
			</if>
			<if test="keyword != null">
				and A.NOTICE_TITLE like  CONCAT('%', #{keyword}, '%')	
			</if>
		order by
			A.NOTICE_NO DESC
		LIMIT 10 OFFSET #{begin}
	</select>
	
	<select id="getNoticeByNo" parameterType="int" resultType="kr.co.mgv.support.vo.Notice">
		SELECT 
			A.NOTICE_NO				as no, 
			A.NOTICE_TITLE			as title, 
			A.NOTICE_CONTENT		as content, 
			A.NOTICE_DELETED		as deleted,
			A.NOTICE_UPDATE_DATE	as updateDate,
			A.NOTICE_CREATE_DATE	as createDate, 
			A.LOCATION_NO			as "location.no", 
			B.LOCATION_NAME			as "location.name", 
			A.THEATER_NO			as "theater.no", 
			C.THEATER_NAME			as "theater.name", 
			A.CATEGORY_NO			as "category.no",
			D.CATEGORY_NAME			as "category.name",
			A.NOTICE_TYPE			as type 
		FROM 
			MGV_SUPPORT_NOTICE A 
			left outer join MGV_LOCATION B on A.LOCATION_NO = B.LOCATION_NO 
			left outer join MGV_THEATERS C on A.THEATER_NO = C.THEATER_NO 
			inner join MGV_SUPPORT_CATEGORIES D on A.CATEGORY_NO = D.CATEGORY_NO
		where
			A.NOTICE_DELETED = 'N'
			and A.NOTICE_NO = #{value}
	</select>
	
	<select id="getNoticeList" resultType="kr.co.mgv.support.vo.Notice">
		SELECT 
			A.NOTICE_NO				as no, 
			A.NOTICE_TITLE			as title, 
			A.NOTICE_CONTENT		as content, 
			A.NOTICE_DELETED		as deleted,
			A.NOTICE_UPDATE_DATE	as updateDate,
			A.NOTICE_CREATE_DATE	as createDate, 
			A.LOCATION_NO			as "location.no", 
			B.LOCATION_NAME			as "location.name", 
			A.THEATER_NO			as "theater.no", 
			C.THEATER_NAME			as "theater.name", 
			A.CATEGORY_NO			as "category.no",
			D.CATEGORY_NAME			as "category.name",
			A.NOTICE_TYPE			as type 
		FROM 
			MGV_SUPPORT_NOTICE A 
			left outer join MGV_LOCATION B on A.LOCATION_NO = B.LOCATION_NO 
			left outer join MGV_THEATERS C on A.THEATER_NO = C.THEATER_NO 
			inner join MGV_SUPPORT_CATEGORIES D on A.CATEGORY_NO = D.CATEGORY_NO
		where
			A.NOTICE_DELETED = 'N'
		order by
			A.NOTICE_NO DESC
	</select>
	
	<select id="getPrevNotice" parameterType="int" resultType="kr.co.mgv.support.vo.Notice">
		SELECT 
			A.NOTICE_NO				as no, 
			A.NOTICE_TITLE			as title, 
			A.NOTICE_CONTENT		as content, 
			A.NOTICE_DELETED		as deleted,
			A.NOTICE_UPDATE_DATE	as updateDate,
			A.NOTICE_CREATE_DATE	as createDate, 
			A.LOCATION_NO			as "location.no", 
			B.LOCATION_NAME			as "location.name", 
			A.THEATER_NO			as "theater.no", 
			C.THEATER_NAME			as "theater.name", 
			A.CATEGORY_NO			as "category.no",
			D.CATEGORY_NAME			as "category.name",
			A.NOTICE_TYPE			as type 
		FROM 
			MGV_SUPPORT_NOTICE A 
			left outer join MGV_LOCATION B on A.LOCATION_NO = B.LOCATION_NO 
			left outer join MGV_THEATERS C on A.THEATER_NO = C.THEATER_NO 
			inner join MGV_SUPPORT_CATEGORIES D on A.CATEGORY_NO = D.CATEGORY_NO
		where
			A.NOTICE_DELETED = 'N'
			and A.NOTICE_NO &lt; #{value}
		order by
			A.NOTICE_NO  DESC
		LIMIT 1
	</select>
	
	<select id="getNextNotice" parameterType="int" resultType="kr.co.mgv.support.vo.Notice">
		SELECT 
			A.NOTICE_NO				as no, 
			A.NOTICE_TITLE			as title, 
			A.NOTICE_CONTENT		as content, 
			A.NOTICE_DELETED		as deleted,
			A.NOTICE_UPDATE_DATE	as updateDate,
			A.NOTICE_CREATE_DATE	as createDate, 
			A.LOCATION_NO			as "location.no", 
			B.LOCATION_NAME			as "location.name", 
			A.THEATER_NO			as "theater.no", 
			C.THEATER_NAME			as "theater.name", 
			A.CATEGORY_NO			as "category.no",
			D.CATEGORY_NAME			as "category.name",
			A.NOTICE_TYPE			as type 
		FROM 
			MGV_SUPPORT_NOTICE A 
			left outer join MGV_LOCATION B on A.LOCATION_NO = B.LOCATION_NO 
			left outer join MGV_THEATERS C on A.THEATER_NO = C.THEATER_NO 
			inner join MGV_SUPPORT_CATEGORIES D on A.CATEGORY_NO = D.CATEGORY_NO
		where
			A.NOTICE_DELETED = 'N'
			and A.NOTICE_NO > #{value}
		order by
			A.NOTICE_NO  ASC
		LIMIT 1
	</select>

</mapper>








