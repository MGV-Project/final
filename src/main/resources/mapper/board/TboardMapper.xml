<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mgv.board.mapper.TheaterBoardDao">
    <select id="getTotalRows" parameterType="map" resultType="int">
    	select count(*)
    	from MGV_THEATER_BOARD
    	where board_deleted = 'N' and board_report = 'N'
    		<choose>
    			<when test="opt == 'title'">
    				and board_name like CONCAT('%', #{keyword}, '%')
    			</when>
    			<when test="opt == 'content'">
    				and board_content like CONCAT('%', #{keyword}, '%')
    			</when>
    			<when test="opt == 'all'">
    				and board_name like CONCAT('%', #{keyword}, '%') or board_content like CONCAT('%', #{keyword}, '%')
    			</when>
    			<when test="opt == 'writer'">
    				and user_id like CONCAT('%', #{keyword}, '%')
    			</when>
    		</choose>
    		<if test="theaterNo != null">
				and theater_No = #{theaterNo}
			</if>
    		<if test="locationNo != null">
				and location_No = #{locationNo}
			</if>
    </select>
    
    <select id="getTBoards" parameterType="map" resultType="kr.co.mgv.board.vo.TheaterBoard">
    	select *
    	
    	from (
    		select 
    			board_no				as no,
    			board_name				as name,
    			board_create_date		as createDate,
    			board_update_date		as updateDate,
    			board_read_cnt			as readCount,
    			board_comment_cnt		as commentCount,
    			user_id					as "user.id",
    			board_content           as content,
	            row_number() over(
	            	<if test="sort == null">
	                        order by board_create_date desc	            	
	            	</if>
	                <choose>
	                    <when test="sort == 'new'">
	                        order by board_create_date desc
	                    </when>
	                    <when test="sort == 'old'">
	                        order by board_create_date asc
	                    </when>
	                    <when test="sort == 'view'">
	                        order by board_read_cnt desc, board_create_date desc
	                    </when>
	                    <when test="sort == 'comment'">
	                        order by board_comment_cnt desc, board_create_date desc
	                    </when>
	                </choose>
    			) as ROWNUMBER
    		from
    			MGV_THEATER_BOARD
    		where board_deleted = 'N' and board_report = 'N'
	    	<choose>
    			<when test="opt == 'title'">
    				and board_name like CONCAT('%', #{keyword}, '%')
    			</when>
    			<when test="opt == 'content'">
    				and board_content like CONCAT('%', #{keyword}, '%')
    			</when>
    			<when test="opt == 'all'">
    				and board_name like CONCAT('%', #{keyword}, '%') or board_content like CONCAT('%', #{keyword}, '%')
    			</when>
    			<when test="opt == 'writer'">
    				and user_id like CONCAT('%', #{keyword}, '%')
    			</when>
    		</choose>
    		<if test="theaterNo != null">
				and theater_No = #{theaterNo}
			</if>
    		<if test="locationNo != null">
				and location_No = #{locationNo}
			</if>
    	) A
    	having A.ROWNUMBER between #{begin} and #{end}
    </select>
    
    <select id="getTheatersByLocationNo" parameterType="int" resultType="kr.co.mgv.board.vo.BoardTheater">
    	SELECT 
    		A.theater_no		as no,
    		A.theater_name		as name,
    		A.location_no		as "location.no",
    		B.location_name		as "location.name"
    	from MGV_THEATERS A, MGV_LOCATION B
    	where
    		A.location_no = B.location_no 
    		and A.location_no = #{value}
    </select>
    
    <select id="getLocaions" resultType="kr.co.mgv.board.vo.BoardLocation">
    	SELECT
    		location_no		as no,
    		location_name	as name
    	from MGV_LOCATION
    </select>
    
</mapper>