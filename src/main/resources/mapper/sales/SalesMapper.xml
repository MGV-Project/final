<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.mgv.admin.sales.dao.SalesDao">

	<select id="getDailyTotalSales" resultType="totalSales">
		SELECT
			date,
			daily_total_sales as totalSales
		FROM
			MGV_DAILY_SALES
		WHERE
			date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)
		order by date;	
	</select>
	
	
	
	<insert id="insertMonthlySales" >
		INSERT INTO
		    MGV_MONTHLY_SALES  (FISCAL_MONTH, MONTHLY_TOTALSALES)
		SELECT
		    DATE_FORMAT(date, '%Y-%m') AS FISCAL_MONTH,
		    SUM(daily_total_sales) AS MONTHLY_TOTALSALES
		FROM
		    MGV_DAILY_SALES 
		WHERE
		    DATE_FORMAT(date, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m');
		GROUP BY
		    DATE_FORMAT(date, '%Y-%m')
		ON DUPLICATE KEY UPDATE  
		    MONTHLY_TOTALSALES = VALUES(MONTHLY_TOTALSALES);
	</insert>
	
	<insert id="insertMonthlyMovieSales" >
	INSERT INTO MGV_MONTHLY_MOVIE_SALES 
		(MONTH, MOVIE_NO, AUDIENCE, TOTAL_SALES)
	SELECT
		DATE_FORMAT(DATE, '%Y-%m') AS MONTH,
		MOVIE_NO,
		SUM(AUDIENCE),
		SUM(TOTAL_SALES) AS TOTAL_SALES
	FROM
		MGV_DAILY_MOVIE_SALES
	WHERE
	    DATE_FORMAT(date, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m');
	GROUP BY
		DATE_FORMAT(DATE, '%Y-%m'),
		MOVIE_NO
	ON DUPLICATE KEY UPDATE
		TOTAL_SALES = VALUES(TOTAL_SALES);
	</insert>

	<insert id="insertMonthlyProductSales" >
	INSERT INTO MGV_MONTHLY_PRODUCT_SALES 
		(MONTH, PRODUCT_NO, AMOUNT, TOTAL_SALES)
	SELECT
		DATE_FORMAT(DATE, '%Y-%m') AS MONTH,
		PRODUCT_NO,
		SUM(AMOUNT),
		SUM(TOTAL_SALES) AS TOTAL_SALES
	FROM
		MGV_DAILY_MOVIE_SALES
	WHERE
	    DATE_FORMAT(date, '%Y-%m') = DATE_FORMAT(CURDATE(), '%Y-%m');
	GROUP BY
		DATE_FORMAT(DATE, '%Y-%m'),
		PRODUCT_NO
	ON DUPLICATE KEY UPDATE
		TOTAL_SALES = VALUES(TOTAL_SALES);
	</insert>
	
	<insert id="insertYearlySales" parameterType="String">
	INSERT INTO
		MGV_YEARLY_SALES (FISCAL_YEAR, YEARLY_TOTALSALES)
	SELECT 
		SUBSTRING(FISCAL_MONTH, 1, 4) AS FISCAL_YEAR,
		SUM(MONTHLY_TOTALSALES) AS YEARLY_TOTALSALES
	FROM 
		MGV_MONTHLY_SALES
	WHERE 
		SUBSTRING(FISCAL_MONTH, 1, 4) = DATE_FORMAT(CURDATE(), '%Y');
	GROUP BY 
		SUBSTRING(FISCAL_MONTH, 1, 4)
	ON DUPLICATE KEY UPDATE  
		YEARLY_TOTALSALES = VALUES(YEARLY_TOTALSALES);
	</insert>
	
	<insert id="insertYearlyMovieSales" >
	INSERT INTO MGV_YEARLY_MOVIE_SALES 
		(YEAR, MOVIE_NO, AUDIENCE, TOTAL_SALES)
	SELECT
	    SUBSTRING(MONTH, 1, 4) AS YEAR,
	    MOVIE_NO,
	    SUM(AUDIENCE), 
	    SUM(TOTAL_SALES) AS TOTAL_SALES
	FROM
	    MGV_MONTHLY_MOVIE_SALES
    WHERE 
		SUBSTRING(FISCAL_MONTH, 1, 4) = DATE_FORMAT(CURDATE(), '%Y');
	GROUP BY
	    SUBSTRING(MONTH, 1, 4),
	    MOVIE_NO 
	ON DUPLICATE KEY UPDATE
		TOTAL_SALES = VALUES(TOTAL_SALES);
	</insert>
	
	<insert id="insertYearlyProductSales">
	INSERT INTO MGV_YEARLY_PRODUCT_SALES 
		(YEAR, PRODUCT_NO, AMOUNT, TOTAL_SALES)
	SELECT
	    SUBSTRING(MONTH, 1, 4) AS YEAR,
	    PRODUCT_NO,
	    SUM(AMOUNT), 
	    SUM(TOTAL_SALES) AS TOTAL_SALES
	FROM
	    MGV_MONTHLY_PRODUCT_SALES 
	WHERE 
		SUBSTRING(FISCAL_MONTH, 1, 4) = DATE_FORMAT(CURDATE(), '%Y');    
	GROUP BY
	    SUBSTRING(MONTH, 1, 4),
	    PRODUCT_NO 
	ON DUPLICATE KEY UPDATE
		TOTAL_SALES = VALUES(TOTAL_SALES);
	</insert>

</mapper>