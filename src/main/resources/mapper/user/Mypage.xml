<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mgv.user.dao.MypageDao">

    <!-- 결제내역 전체조회-->
    <select id="getPurchases" parameterType="map" resultType="Purchase">
        select *
            from (SELECT ROW_NUMBER() OVER (ORDER BY A.PURCHASE_DATE DESC) as ROW_NUM,
                A.PURCHASE_NO              as "no",
                A.PURCHASE_DATE            as purchaseDate,
                A.PURCHASE_CANCELED_DATE   as canceledDate,
                C.PRODUCT_NAME             as "product.name",
                A.PURCHASE_PRICE           as price,
                A.PURCHASE_STATUS          as status,
                B.USER_ID                  as "user.id"
            FROM
                MGV_PURCHASE A
                JOIN MGV_USER B on A.USER_ID = B.USER_ID
                JOIN MGV_PRODUCT C ON A.PRODUCT_NO = C.PRODUCT_NO
            WHERE
                B.USER_ID = #{userId}
                <if test="status neq null and status != ''">
                    AND A.PURCHASE_STATUS = #{status}
                </if>
                    AND A.PURCHASE_DATE BETWEEN #{startDate} AND #{endDate}) as PURCHASE_ROW
        WHERE ROW_NUM BETWEEN #{begin} and #{end};
    </select>

    <select id="getTotalRowsByUserId" parameterType="string" resultType="int">
        SELECT COUNT(*)
        FROM
            MGV_PURCHASE
        WHERE
            USER_ID = #{userId}
            <if test="status neq null and status != ''">
                AND PURCHASE_STATUS = #{status}
            </if>
                AND PURCHASE_DATE BETWEEN #{startDate} AND #{endDate}
    </select>

    <select id="getPurchaseByNo" parameterType="int" resultType="Purchase">
        select
            A.PURCHASE_DATE             AS purchaseDate,
            A.PURCHASE_CANCELED_DATE    AS canceledDate,
            C.PRODUCT_NAME              AS "product.name",
            A.PURCHASE_PRICE            AS price,
            A.PURCHASE_STATUS           AS status,
            B.USER_ID                   AS "user.id"
        FROM
            MGV_PURCHASE A
            LEFT JOIN MGV_USER B ON A.USER_ID = B.USER_ID
            LEFT JOIN MGV_PRODUCT C ON A.PRODUCT_NO = C.PRODUCT_NO
        WHERE
            A.PURCHASE_NO = #{purchaseNo}
    </select>

    <update id="updatePurchaseByNo" parameterType="int">
        UPDATE MGV_PURCHASE
        SET PURCHASE_STATUS = 'C',
            PURCHASE_CANCELED_DATE = CURRENT_TIMESTAMP
        WHERE PURCHASE_NO = #{purchaseNo}
    </update>

</mapper>
